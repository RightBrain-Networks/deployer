name: deployer-actions
on:
  push:
  release:
    types: [ published ]
env:
  GITHUB_URL: 'git@github.com:RightBrain-Networks/deployer.git'
  GITHUB_KEY: 'rbn-ops github'

  SERVICE: 'deployer'
  SELF_SEMVER_TAG: "master"

  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
    printJob:
      name: Print event
      runs-on: ubuntu-latest
      steps:
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT"
    build:
        runs-on: ubuntu-latest
        outputs:
          RETURN_STATUS: ${{ steps['semver']['outputs']['RETURN_STATUS'] }}
          SEMVER_NEW_VERSION: ${{ steps['semver']['outputs']['SEMVER_NEW_VERSION'] }}
          VERSION: ${{ steps['semver']['outputs']['VERSION'] }}
        steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
            ref: ${{ env.GITHUB_REF }}
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
        - name: Set Up Git Config
          run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
        - name: Run Auto-Semver
          id: semver
          if: github.event_name != 'release'
          uses: RightBrain-Networks/semver-action@1.0-beta
          with:
            mode: set
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        - name: build
          run: |
            python setup.py sdist
        - name: test
          run: |
            python tests.py
          working-directory: deployer
        - name: Run Auto-Semver
          id: bumpversion
          if: github.event_name == 'release' && github.event.action == 'published'
          uses: RightBrain-Networks/semver-action@1.0-beta
          with:
            mode: get
    release:
        runs-on: ubuntu-latest
        needs: [ build ]
        if: startsWith(github.ref, 'refs/tags') != true
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              fetch-depth: 0
              ref: ${{ env.GITHUB_REF }}
          - name: Set Up Git Config
            run: |
              git config user.name "GitHub Actions Bot"
              git config user.email "<>"
              echo "RETURN_STATUS = ${{ needs.build.outputs.RETURN_STATUS }}"
              echo "VERSION = ${{ needs.build.outputs.VERSION }}"
          - name: Create Release
            if: needs['build']['outputs']['RETURN_STATUS'] == ''
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
            with:
              tag_name: ${{ needs.build.outputs.VERSION }}
              release_name: ${{ needs.build.outputs.VERSION }}
              body: Version ${{ needs.build.outputs.VERSION }} released automatically by [RightBrain-Networks/auto-semver](https://github.com/RightBrain-Networks/auto-semver)
              draft: false
              prerelease: false