name: release
on:
  release:
    types:
      - published
env:
  GITHUB_URL: 'git@github.com:RightBrain-Networks/deployer.git'
  GITHUB_KEY: 'rbn-ops github'

  SERVICE: 'deployer'
  SELF_SEMVER_TAG: "master"

  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
    printJob:
      name: Print event
      runs-on: ubuntu-latest
      steps:
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT"
    release:
      runs-on: ubuntu-latest
      steps:
        - name: Download build artifact
          env:
            GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          run: |
            WF_NAME="build"
            ARTIFACT_NAME="deployer-${{ github.ref_name }}.tar.gz"
            RUN_ID=`gh run list --repo ${{ github.repository }} --workflow ${WF_NAME} --json databaseId --jq .[0].databaseId`
            echo $RUN_ID
            gh run download --repo ${{ github.repository }} ${RUN_ID} -n ${ARTIFACT_NAME}
            tar -xf ${ARTIFACT_NAME} --strip-components=1
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
        - name: Run Auto-Semver
          id: semver
          uses: RightBrain-Networks/semver-action@1.0-beta
          with:
            mode: get
        - name: debug
          run: |
            pwd
            tree -d
            ls
#        - name: Upload Release Asset
#          id: upload-release-asset
#          uses: actions/upload-release-asset@v1
#          env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          with:
#            upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#            asset_path: ./my-artifact.zip
#            asset_name: my-artifact.zip
#            asset_content_type: application/zip