name: build
on:
  push:
env:
  GITHUB_URL: 'git@github.com:RightBrain-Networks/deployer.git'
  GITHUB_KEY: 'rbn-ops github'

  SERVICE: 'deployer'
  SELF_SEMVER_TAG: "master"

  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
    printJob:
      name: Print event
      runs-on: ubuntu-latest
      steps:
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
          run: |
            echo "$GITHUB_CONTEXT"
    build:
      runs-on: ubuntu-latest
      outputs:
        RETURN_STATUS: ${{ steps['semver']['outputs']['RETURN_STATUS'] }}
        SEMVER_NEW_VERSION: ${{ steps['semver']['outputs']['SEMVER_NEW_VERSION'] }}
        VERSION: ${{ steps['semver']['outputs']['VERSION'] }}
      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.GITHUB_REF }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build
        id: build
        run: |
          pip install https://github.com/RightBrain-Networks/auto-semver/releases/download/0.7.1/auto-semver.tar.gz

          export regex='^\s*current_version\s*=\s*\K[^\s]+'

          export RETURN_STATUS=$(semver -n || echo $?)
          export SEMVER_NEW_VERSION=`grep -Po ${regex} .bumpversion.cfg`
          export VERSION=`semver_get_version -d`

          echo "::set-output name=SEMVER_RETURN_STATUS::$RETURN_STATUS"
          echo "::set-output name=SEMVER_NEW_VERSION::$SEMVER_NEW_VERSION"
          echo "::set-output name=VERSION::$VERSION"

          echo "Current version number in __init__.py = $(sed -n 21p deployer/__init__.py)"

          python setup.py sdist
#      - name: test
#        run: |
#          python tests.py
#        working-directory: deployer
#      - name: Upload Artifact
#        if: steps['semver']['outputs']['RETURN_STATUS'] == ''
#        uses: actions/upload-artifact@v3
#        with:
#          name: deployer-${{ steps['semver']['outputs']['VERSION'] }}.tar.gz
#          path: ./dist/deployer-${{ steps['semver']['outputs']['VERSION'] }}.tar.gz
      - name: Commit versioned files
        # Will commit the changed files and return the new commit sha
        if: steps['build']['outputs']['SEMVER_RETURN_STATUS'] == ''
        id: commit
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git pull
          git commit -a -m "Updated version number to ${{ steps.build.outputs.VERSION }}"
          git push

          echo "::set-output name=NEW_COMMIT_SHA::$(git rev-parse --verify HEAD)"
      - name: Create Release
        if: steps['build']['outputs']['SEMVER_RETURN_STATUS'] == ''
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps['build']['outputs']['VERSION'] }}
          release_name: ${{ steps['build']['outputs']['VERSION'] }}
          body: Version ${{ steps['build']['outputs']['VERSION'] }} released automatically by [RightBrain-Networks/auto-semver](https://github.com/RightBrain-Networks/auto-semver)
          draft: false
          prerelease: false
          commitish: ${{ steps['commit']['outputs']['NEW_COMMIT_SHA'] }}